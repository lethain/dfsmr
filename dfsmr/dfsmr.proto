syntax = "proto3";

service DistributedFSMRunner {
	rpc Define (DefineRequest) returns (DefineReply) {}
	rpc Start (TaskMessage) returns (TaskMessage) {}
	rpc Ready (ReadyRequest) returns (TaskMessage) {}
	rpc Changes (ChangesRequest) returns (stream ChangesReply) {}
	rpc Machines (MachinesRequest) returns (MachinesReply) {}
	rpc Instances (InstancesRequest) returns (InstancesReply) {}
	rpc Transition (TransitionRequest) returns (TransitionReply) {}
	rpc Relinquish (RelinquishRequest) returns (RelinquishReply) {}
}

message Transition {
	string id = 1;
	string node = 2;
}

message Node {
	string id = 1;
	repeated Transition transitions = 2;
	bool start = 3;
	bool final = 4;
}

message DefineRequest {
	string id = 1;
	repeated Node nodes = 2;
}


message DefineReply {
	bool success = 1;
	string id = 2;
	string successMessage = 3;
	string errorMessage = 4;
}

message MachinesRequest {

}

message MachinesReply {
	repeated DefineRequest machines = 1;
}

message ReadyRequest {
	string client = 1;
	string machine = 2;
	string node = 3;
}

message TaskMessage {
	string id = 1;
	string machine = 2;
	string node = 3;
	string owner = 4;
	int32 startTime = 5;
	int32 starts = 6;
	map<string, string> instanceParams = 7;
	map<string, string> nodeParams = 8;
}

message TransitionRequest {
	string instance = 1;
	string transition = 2;
	map<string, string> nodeParams = 3;
}

message TransitionReply {
	string instance = 1;
	string node = 2;		
	string prevNode = 3;
}

message RelinquishRequest {
	string instance = 1;
}

message RelinquishReply {
	string istance = 1;
	string node = 2;
}

message InstancesRequest {

}

message InstancesReply {
	repeated TaskMessage instances = 1;
}

message ChangesRequest {

}

message ChangesReply {
	string command = 1;
	string client = 2;
}
